//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace demo.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Score", Namespace="http://schemas.datacontract.org/2004/07/KulkiGlobalScoreBoard")]
    [System.SerializableAttribute()]
    public partial class Score : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BoardSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColorNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoresField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BoardSize {
            get {
                return this.BoardSizeField;
            }
            set {
                if ((this.BoardSizeField.Equals(value) != true)) {
                    this.BoardSizeField = value;
                    this.RaisePropertyChanged("BoardSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColorNumbers {
            get {
                return this.ColorNumbersField;
            }
            set {
                if ((this.ColorNumbersField.Equals(value) != true)) {
                    this.ColorNumbersField = value;
                    this.RaisePropertyChanged("ColorNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nick {
            get {
                return this.NickField;
            }
            set {
                if ((object.ReferenceEquals(this.NickField, value) != true)) {
                    this.NickField = value;
                    this.RaisePropertyChanged("Nick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Scores {
            get {
                return this.ScoresField;
            }
            set {
                if ((this.ScoresField.Equals(value) != true)) {
                    this.ScoresField = value;
                    this.RaisePropertyChanged("Scores");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IGlobalScoreBoard")]
    public interface IGlobalScoreBoard {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalScoreBoard/SendScoreToServer", ReplyAction="http://tempuri.org/IGlobalScoreBoard/SendScoreToServerResponse")]
        bool SendScoreToServer(demo.ServiceReference1.Score score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalScoreBoard/SendScoreToServer", ReplyAction="http://tempuri.org/IGlobalScoreBoard/SendScoreToServerResponse")]
        System.Threading.Tasks.Task<bool> SendScoreToServerAsync(demo.ServiceReference1.Score score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalScoreBoard/GetAllScores", ReplyAction="http://tempuri.org/IGlobalScoreBoard/GetAllScoresResponse")]
        demo.ServiceReference1.Score[] GetAllScores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalScoreBoard/GetAllScores", ReplyAction="http://tempuri.org/IGlobalScoreBoard/GetAllScoresResponse")]
        System.Threading.Tasks.Task<demo.ServiceReference1.Score[]> GetAllScoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalScoreBoard/GetScoresByNick", ReplyAction="http://tempuri.org/IGlobalScoreBoard/GetScoresByNickResponse")]
        demo.ServiceReference1.Score[] GetScoresByNick(string nick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalScoreBoard/GetScoresByNick", ReplyAction="http://tempuri.org/IGlobalScoreBoard/GetScoresByNickResponse")]
        System.Threading.Tasks.Task<demo.ServiceReference1.Score[]> GetScoresByNickAsync(string nick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalScoreBoard/GetScoresByBoardSize", ReplyAction="http://tempuri.org/IGlobalScoreBoard/GetScoresByBoardSizeResponse")]
        demo.ServiceReference1.Score[] GetScoresByBoardSize(int boardSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalScoreBoard/GetScoresByBoardSize", ReplyAction="http://tempuri.org/IGlobalScoreBoard/GetScoresByBoardSizeResponse")]
        System.Threading.Tasks.Task<demo.ServiceReference1.Score[]> GetScoresByBoardSizeAsync(int boardSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalScoreBoard/GetScoresByColorNumbers", ReplyAction="http://tempuri.org/IGlobalScoreBoard/GetScoresByColorNumbersResponse")]
        demo.ServiceReference1.Score[] GetScoresByColorNumbers(int colors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGlobalScoreBoard/GetScoresByColorNumbers", ReplyAction="http://tempuri.org/IGlobalScoreBoard/GetScoresByColorNumbersResponse")]
        System.Threading.Tasks.Task<demo.ServiceReference1.Score[]> GetScoresByColorNumbersAsync(int colors);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGlobalScoreBoardChannel : demo.ServiceReference1.IGlobalScoreBoard, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GlobalScoreBoardClient : System.ServiceModel.ClientBase<demo.ServiceReference1.IGlobalScoreBoard>, demo.ServiceReference1.IGlobalScoreBoard {
        
        public GlobalScoreBoardClient() {
        }
        
        public GlobalScoreBoardClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GlobalScoreBoardClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GlobalScoreBoardClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GlobalScoreBoardClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SendScoreToServer(demo.ServiceReference1.Score score) {
            return base.Channel.SendScoreToServer(score);
        }
        
        public System.Threading.Tasks.Task<bool> SendScoreToServerAsync(demo.ServiceReference1.Score score) {
            return base.Channel.SendScoreToServerAsync(score);
        }
        
        public demo.ServiceReference1.Score[] GetAllScores() {
            return base.Channel.GetAllScores();
        }
        
        public System.Threading.Tasks.Task<demo.ServiceReference1.Score[]> GetAllScoresAsync() {
            return base.Channel.GetAllScoresAsync();
        }
        
        public demo.ServiceReference1.Score[] GetScoresByNick(string nick) {
            return base.Channel.GetScoresByNick(nick);
        }
        
        public System.Threading.Tasks.Task<demo.ServiceReference1.Score[]> GetScoresByNickAsync(string nick) {
            return base.Channel.GetScoresByNickAsync(nick);
        }
        
        public demo.ServiceReference1.Score[] GetScoresByBoardSize(int boardSize) {
            return base.Channel.GetScoresByBoardSize(boardSize);
        }
        
        public System.Threading.Tasks.Task<demo.ServiceReference1.Score[]> GetScoresByBoardSizeAsync(int boardSize) {
            return base.Channel.GetScoresByBoardSizeAsync(boardSize);
        }
        
        public demo.ServiceReference1.Score[] GetScoresByColorNumbers(int colors) {
            return base.Channel.GetScoresByColorNumbers(colors);
        }
        
        public System.Threading.Tasks.Task<demo.ServiceReference1.Score[]> GetScoresByColorNumbersAsync(int colors) {
            return base.Channel.GetScoresByColorNumbersAsync(colors);
        }
    }
}
